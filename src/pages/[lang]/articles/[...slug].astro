---
import ButtonArticle from '@/components/ButtonArticle.astro';
import { formatDate } from '@/utils/format-date';
import Footer from '@components/Footer.astro';
import ThemeToggle from '@components/ThemeToggle.astro';
import Layout from '@layouts/Layout.astro';
import { getEntry } from 'astro:content';

const { slug, lang } = Astro.params;
const article = await getEntry('articles', slug);

if (!article) {
  throw new Error(`Not Found: ${slug}`);
}

const { Content } = await article.render();

function formatReadingTime(wordCount: number, lang: string) {
  const wordsPerMinute = 200;
  const minutes = Math.ceil(wordCount / wordsPerMinute);

  if (lang?.toLowerCase() === 'pt-br') {
    return `${minutes} min de leitura`;
  }

  return `${minutes} min read`;
}

const textContent = article.body || '';
const wordCount = textContent.split(/\s+/).length;
const readingTime = formatReadingTime(wordCount, lang);
---

<Layout lang={lang} title={article.data.title}>
  <div class="fixed top-6 right-6 z-[9999]">
    <ThemeToggle />
  </div>

  <div class="flex flex-col min-h-[100dvh] relative">
    <div
      class="absolute inset-0 bg-gradient-to-br from-gray-50 via-gray-100 to-gray-200 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900"
    >
      <div
        class="absolute inset-0 opacity-[0.02] dark:opacity-[0.05]"
        style="background-image: radial-gradient(circle at 1px 1px, rgba(0,0,0,0.15) 1px, transparent 0); background-size: 20px 20px;"
      >
      </div>
    </div>

    <ButtonArticle lang={lang} />

    <main class="relative z-50 flex-grow px-6 py-8">
      <article class="max-w-4xl mx-auto h-full">
        <header class="mb-12 text-center animate-fadeInUp animation-delay-200">
          <div class="space-y-6">
            <h1
              class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 dark:text-white leading-tight"
            >
              {article.data.title}
            </h1>

            {
              article.data.description && (
                <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
                  {article.data.description}
                </p>
              )
            }

            <div
              class="flex flex-wrap items-center justify-center gap-6 text-gray-500 dark:text-gray-400"
            >
              <div class="flex items-center space-x-2">
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                  ></path>
                </svg>
                <time datetime={article.data.date.toISOString()}>
                  {formatDate(new Date(article.data.date), lang)}
                </time>
              </div>

              {
                article.data.author && (
                  <div class="flex items-center space-x-2">
                    <svg
                      class="w-5 h-5"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                      />
                    </svg>
                    <span>{article.data.author}</span>
                  </div>
                )
              }

              <div class="flex items-center space-x-2">
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span>{readingTime}</span>
              </div>
            </div>
          </div>

          <div
            class="w-24 h-1 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto rounded-full mt-8"
          >
          </div>
        </header>

        <div
          class="prose prose-lg dark:prose-invert prose-gray max-w-none animate-fadeInUp animation-delay-400"
        >
          <div
            class="flex-grow bg-white/50 dark:bg-gray-800/30 backdrop-blur-sm rounded-2xl p-8 md:p-12 border border-gray-200/50 dark:border-gray-700/50"
          >
            <Content />
          </div>
        </div>
      </article>
    </main>
    <Footer lang={lang} />
  </div>
</Layout>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeInUp {
    animation: fadeInUp 0.8s ease-out both;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }
</style>
